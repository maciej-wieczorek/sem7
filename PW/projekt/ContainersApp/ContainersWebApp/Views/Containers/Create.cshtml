@model ContainersApp.Interfaces.IContainer

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>IContainer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductionYear" class="control-label"></label>
                <input asp-for="ProductionYear" class="form-control" />
                <span asp-validation-for="ProductionYear" class="text-danger"></span>
            </div>
			<div class="form-group">
                <label asp-for="Producer" class="control-label"></label>
                @Html.DropDownListFor(model => model.Producer, (SelectList)ViewBag.Producers, "Select Producer", new { @class = "form-control" })
                <span asp-validation-for="Producer" class="text-danger"></span>
            </div>
		   <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                @Html.DropDownListFor(model => model.Type, new SelectList(Enum.GetValues(typeof(ContainersApp.Core.ContainerType))), "Select Container Type", new { @class = "form-control" })
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
